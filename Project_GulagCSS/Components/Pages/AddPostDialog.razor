
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inject PostService PostService
@inject NavigationManager Navigation
@if (isVisible)
{
    <div class="modal" style="display:block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Post</h5>
                    <button type="button" class="close" @onclick="Hide">&times;</button>
                </div>
                <div class="modal-body">
                    <EditForm Model="newPost" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label for="title">Title:</label>
                            <InputText id="title" class="form-control" @bind-Value="newPost.Title" />
                        </div>

                        <div class="form-group">
                            <label for="code">Code:</label>
                            <InputTextArea id="code" class="form-control" @bind-Value="newPost.Code" />
                        </div>

                        <div class="form-group">
                            <label for="category">Category:</label>
                            <InputText id="category" class="form-control" @bind-Value="newPost.Category" />
                        </div>

                        <button type="submit" class="btn btn-primary">Add Post</button>
                        <button type="button" class="btn btn-secondary" @onclick="Hide">Cancel</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private bool isVisible = false;
    private Post newPost = new Post();

    public void Show()
    {
        isVisible = true;
        StateHasChanged();
    }

    public void Hide()
    {
        isVisible = false;
    }

    private async Task HandleValidSubmit()
    {
        newPost.CreateDate = DateTime.UtcNow;
        await PostService.AddPostAsync(newPost);
        Hide();
        Navigation.NavigateTo("/");
    }
}
